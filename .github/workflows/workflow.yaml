name: Dev build
on:
  workflow_dispatch:
    inputs:
      release_version:
        required: true
jobs:
    build:
      env:
          DUMMY: dummy
      strategy:
        matrix:
          platform: [ ubuntu-latest ]
      runs-on: ${{ matrix.platform }}
      steps:
          - uses: actions/checkout@v1
          - uses: actions/setup-java@v1
            with:
              java-version: '12.x'
          # - run: echo $SIGNING_KEY | base64 -d > android/app/key.jks
          #   env:
          #     SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
          - uses: subosito/flutter-action@v1
            with:
              flutter-version: '3.3.9'
          # setup environment
          - uses: dart-lang/setup-dart@v1
          # - run: dart tool/tool_env.dart
          # download firebase config, put it in right place
          # - run: wget $FIREBASE_ANDROID_CONFIG_URL -O android/app/google-services.json
          - run: flutter pub get
          - run: flutter build apk --release --split-per-abi
            # env:
            #   KEY_STORE_PASSWORD: ${{ secrets.KEY_STORE_PASSWORD }}
            #   KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
            #   ALIAS: ${{ secrets.ALIAS }}
            #   KEY_PATH: key.jks
          - name: Create a Release APK
            uses: ncipollo/release-action@v1
            with:
              artifacts: "build/app/outputs/apk/release/*.apk"
              tag: ${{ github.event.inputs.release_version }}
              token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          
